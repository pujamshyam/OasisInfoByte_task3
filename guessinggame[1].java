/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import classes.GuessNumbers;
import classes.Gui;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author shyam
 */
public class guessinggame extends javax.swing.JFrame {

    /**
     * Creates new form guessinggame
     */
    public guessinggame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        l_bestscore = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        l_score = new javax.swing.JLabel();
        l_guess = new javax.swing.JLabel();
        l_life = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        f_guess = new javax.swing.JTextField();
        l_hide = new javax.swing.JLabel();
        l_showrandom = new javax.swing.JLabel();
        l_show = new javax.swing.JLabel();
        l_remarks = new javax.swing.JLabel();
        btn_newrandom = new javax.swing.JButton();
        btn_guess = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUESSING GAME");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-update-left-rotation-24.png"))); // NOI18N
        jLabel1.setToolTipText("reset");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        l_bestscore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_bestscore.setText("Best Score : 0");
        l_bestscore.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("GUESSING GAME");

        jSeparator1.setBackground(new java.awt.Color(51, 51, 255));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-ask-100.png"))); // NOI18N
        jLabel4.setToolTipText("logo");

        l_score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_score.setText("Score : 0");
        l_score.setToolTipText("");
        l_score.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_guess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_guess.setText("Guesses : 0");
        l_guess.setToolTipText("");
        l_guess.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_life.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_life.setText("Life : 10");
        l_life.setToolTipText("");
        l_life.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Enter your Number (1-100)");

        f_guess.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f_guess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_guessActionPerformed(evt);
            }
        });
        f_guess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_guessKeyTyped(evt);
            }
        });

        l_hide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_hide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-hide-30 (1).png"))); // NOI18N
        l_hide.setToolTipText("");
        l_hide.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_hideMouseClicked(evt);
            }
        });

        l_showrandom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_showrandom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-seen-30.png"))); // NOI18N
        l_showrandom.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        l_showrandom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l_showrandomMouseClicked(evt);
            }
        });

        l_show.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        l_show.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_show.setText("?");
        l_show.setToolTipText("");
        l_show.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_remarks.setBackground(new java.awt.Color(51, 51, 255));
        l_remarks.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        l_remarks.setForeground(new java.awt.Color(255, 255, 255));
        l_remarks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_remarks.setText("Lets Check Your Luck");
        l_remarks.setOpaque(true);

        btn_newrandom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-shuffle-25.png"))); // NOI18N
        btn_newrandom.setText("New Random Number");
        btn_newrandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newrandomActionPerformed(evt);
            }
        });

        btn_guess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/icons8-checked-checkbox-24.png"))); // NOI18N
        btn_guess.setText("Guess");
        btn_guess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guessActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(l_bestscore, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(19, 19, 19))))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l_score, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(l_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(l_life, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_newrandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(f_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(l_show, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(l_showrandom, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(l_hide, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(l_remarks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(l_bestscore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_score, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_life, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l_showrandom)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(f_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_show, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(l_hide))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_newrandom)
                            .addComponent(btn_guess)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_newrandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newrandomActionPerformed
        // TODO add your handling code here:
        randomNew();
    }//GEN-LAST:event_btn_newrandomActionPerformed

    private void btn_guessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guessActionPerformed
        // TODO add your handling code here:
        guess();
    }//GEN-LAST:event_btn_guessActionPerformed

    private void l_showrandomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_showrandomMouseClicked
        // TODO add your handling code here:
        l_showrandom.setEnabled(false);
        l_hide.setEnabled(true);
        l_show.setText(String.valueOf(random));
    }//GEN-LAST:event_l_showrandomMouseClicked

    private void l_hideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l_hideMouseClicked
        // TODO add your handling code here:
         l_showrandom.setEnabled(true);
        l_hide.setEnabled(false);
        l_show.setText("?");
    }//GEN-LAST:event_l_hideMouseClicked

    private void f_guessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_guessKeyTyped
        // TODO add your handling code here:
        Gui._integerOnly(evt);
    }//GEN-LAST:event_f_guessKeyTyped

    private void f_guessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_guessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f_guessActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
Object[] options = {"YES","NO"};
int x = JOptionPane.showOptionDialog(this,"Are you want to reset (yes/no)?", "MESSAGE",JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);
if(x ==  JOptionPane.YES_OPTION){
    reset();
}
else{
    System.exit(0);
}
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guessinggame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guessinggame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guessinggame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guessinggame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new guessinggame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guess;
    private javax.swing.JButton btn_newrandom;
    private javax.swing.JTextField f_guess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel l_bestscore;
    private javax.swing.JLabel l_guess;
    private javax.swing.JLabel l_hide;
    private javax.swing.JLabel l_life;
    private javax.swing.JLabel l_remarks;
    private javax.swing.JLabel l_score;
    private javax.swing.JLabel l_show;
    private javax.swing.JLabel l_showrandom;
    // End of variables declaration//GEN-END:variables

    Gui gui;
    private int random = 0, bestScore = 0, yourScore =0, addCorrectScore = 3;
    private byte guessCount = 0,lifeCount=10, greaterThenError = 0, lessThenError = 0;
    private void init(){
    gui = new Gui();
    Gui._centerFrame(this);
    
    random = GuessNumbers._randomNumber();
    l_hide.setEnabled(false);
    bestScore = Gui.getCurrentBestScore();
    l_bestscore.setText("Best Score :"+bestScore);
}
   private void randomNew(){
    random = GuessNumbers._randomNumber();
    //f_guess.setText(String.valueOf(random)); 
    f_guess.setText("");
    f_guess.requestFocus();
    
    l_hide.setEnabled(false);
    l_showrandom.setEnabled(true);
    l_show.setText("?");
   }
   
   private void guess(){
       if(f_guess.getText().equals("")){
           Gui._message("Please enter your number :", 0);
           f_guess.requestFocus();   
       }
       else if(Integer.parseInt(f_guess.getText()) >= 101 || Integer.parseInt(f_guess.getText()) < 1 ){
          Gui._message("Please enter number between 1 to 100", 0);
          f_guess.setText("");
           f_guess.requestFocus();
       }
       else{
           int yourNumber = Integer.parseInt(f_guess.getText());
           
           if(yourNumber == random){
               Gui._message("YOU WON\n3 more lifes was added", 1);
               yourScore++;
               l_score.setText("Score :"+yourScore);
               lifeCount+=addCorrectScore;
               l_life.setText("Life :"+lifeCount);
               
               updateBestScore();
               
              
            }
           else{
               lifeCount--;
               l_life.setText("Life :"+lifeCount);
               
               if(lifeCount <= 4){
                   l_life.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Asset/icons8-general-warning-sign-48.png"))));
               }
               else{
                   l_life.setIcon(null);
               }
               hint(random, yourNumber);
               if(lifeCount == 0){
                   Gui._message("You used all your life\nPlease try again next time", 0);
                   Object[] options = {"YES, I WANT NOW","NO, I'M TIRED"};
               int x = JOptionPane.showOptionDialog(this,"Want to play again (yes/no)?", "MESSAGE",JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, null);
               if(x ==  JOptionPane.YES_OPTION){
                  newGame();
                }
              else{
                  System.exit(0);
                }
               }
           }
           guessCount++;
           l_guess.setText("Guesses :"+guessCount);
   }
}
   private void hint(int _randomNum, int yourNumber){
       if(_randomNum > yourNumber){
           lessThenError++;
           String mes =messageHint(lessThenError, (byte) 1, yourNumber);
           l_remarks.setText(mes);
       }
       else{
           greaterThenError++;
           String mes =messageHint(greaterThenError, (byte) 0, yourNumber);
           l_remarks.setText(mes);
       }
   }
   private String messageHint(byte errorCount, byte errorCatcher, int numGuess){
       String message;
       switch(errorCatcher){
           case 1:
               String messageCat[] = {String.valueOf(numGuess) + " is less then the random number !",
                       String.valueOf(numGuess) + " is less than the random number !, try you can do it",
                       String.valueOf(numGuess) +" is less than the random number !, try try...",
                       String.valueOf(numGuess) +" is less than the random number !, iam tried of reminding" };
                if(errorCount < 3){
                    message = String.valueOf(numGuess)+ " is less then the random number!";
                }
                else{
                    int randomMes = (int) Math.round(Math.random() * 3);
                    message = messageCat[randomMes];
                }
               break;


           default: 
               String messageCat1[] = {String.valueOf(numGuess) + " is greter then the random number !",
                       String.valueOf(numGuess) + " is greter than the random number !, try try you can do it",
                       String.valueOf(numGuess) +" is greter than the random number !, try try...,",
                       String.valueOf(numGuess) +" is greter than the random number !, iam tried of reminding" };
                if(errorCount < 2){
                    message = String.valueOf(numGuess)+ " is greter then the random number!";
                }
                else{
                    int randomMes = (int) Math.round(Math.random() * 3);
                    message = messageCat1[randomMes];
                }
               break;
       }
       return message;
       
   }
   private void updateBestScore(){
       if(yourScore > bestScore){
           Gui._message("Congratulations! New Best Score !", 1);
           Gui.setNewBestScore("bestScore["+yourScore+"]");
           bestScore = yourScore;
           l_bestscore.setText("Best Score :"+bestScore);
       }
   }
   private void newGame(){
       f_guess.setText("");
       f_guess.requestFocus();
       l_remarks.setText("lets checkyour luck");
       l_hide.setEnabled(false);
       l_showrandom.setEnabled(true);
       l_show.setText("?");
       l_guess.setText("Guesses : 0");
       guessCount = 0;
       l_life.setText("Life :10");
       l_life.setIcon(null);
       lifeCount = 10;
       greaterThenError = 0;
       lessThenError = 0;
       random = GuessNumbers._randomNumber();
       
   }
   private void reset(){
       f_guess.setText("");
       f_guess.requestFocus();
       l_remarks.setText("lets checkyour luck");
       l_hide.setEnabled(false);
       l_showrandom.setEnabled(true);
       l_show.setText("?");
       l_guess.setText("Guesses : 0");
       guessCount = 0;
       l_life.setText("Life :10");
       lifeCount = 10;
       l_life.setIcon(null);
       greaterThenError = 0;
       lessThenError = 0;
       random = GuessNumbers._randomNumber();
       l_score.setText("Score : 0");
       yourScore = 0;
       bestScore = 0;
       Gui.setNewBestScore("bestScore["+ bestScore +"]");
       l_bestscore.setText("Best Score : 0");
   }
}
